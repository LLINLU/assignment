<!DOCTYPE html>
<html>
  <head>
    <title>Portfolio</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css2?family=Overpass+Mono:wght@700&family=Ubuntu:wght@500&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Dosis:wght@600&display=swap" rel="stylesheet">
    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>

    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload', defer: true %>
  </head>

  <body>
    <div class= 'cursor'></div>
    <%= yield %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js" integrity="sha512-DkPsH9LzNzZaZjCszwKrooKwgjArJDiEjA5tTgr3YX4E6TYv93ICS8T41yFHJnnSmGpnf0Mvb5NhScYbwvhn2w==" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TimelineMax.min.js" integrity="sha512-0xrMWUXzEAc+VY7k48pWd5YT6ig03p4KARKxs4Bqxb9atrcn2fV41fWs+YXTKb8lD2sbPAmZMjKENiyzM/Gagw==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.2/TweenLite.min.js" integrity="sha512-x0CXusV7adwDosEmRHbKwjgyozLQezRYBANjHXf4cbKHZqrnIj4/cAx2bvF7fQhNXxL8mRQ2CEOXrv+sH2d/lw==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.2/TimelineLite.min.js" integrity="sha512-QcFHUn/apgyLvyRh1nTAF9byY6IDhIUybgH5ukOwOT8Kk6vEPrZEdR9I8PlvpxM/DF2UXqHIws7QE2lnawGCJA==" crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.3/ScrollMagic.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.8/plugins/animation.gsap.js" integrity="sha512-judXDFLnOTJsUwd55lhbrX3uSoSQSOZR6vNrsll+4ViUFv+XOIr/xaIK96soMj6s5jVszd7I97a0H+WhgFwTEg==" crossorigin="anonymous"></script>

            <script id="plane-vs" type="x-shader/x-vertex">
      #ifdef GL_ES
      precision mediump float;
      #endif

      // those are the mandatory attributes that the lib sets
      attribute vec3 aVertexPosition;
      attribute vec2 aTextureCoord;

      // those are mandatory uniforms that the lib sets and that contain our model view and projection matrix
      uniform mat4 uMVMatrix;
      uniform mat4 uPMatrix;

      // our texture matrix uniform (this is the lib default name, but it could be changed)
      uniform mat4 uTextureMatrix0;

      // our time uniform
      uniform float uTime;

      // our mouse position uniform
      uniform vec2 uMousePosition;

      // our mouse strength
      uniform float uMouseStrength;

      // if you want to pass your vertex and texture coords to the fragment shader
      varying vec3 vVertexPosition;
      varying vec2 vTextureCoord;

      void main() {
        vec3 vertexPosition = aVertexPosition;

        // get the distance between our vertex and the mouse position
        float distanceFromMouse = distance(uMousePosition, vec2(vertexPosition.x, vertexPosition.y));

        // this will define how close the ripples will be from each other. The bigger the number, the more ripples you'll get
        float rippleFactor = 6.0;
        // calculate our ripple effect
        float rippleEffect = cos(rippleFactor * (distanceFromMouse - (uTime / 120.0)));

        // calculate our distortion effect
        float distortionEffect = rippleEffect * uMouseStrength;

        // apply it to our vertex position
        vertexPosition +=  distortionEffect / 30.0;

          gl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);

        // varyings
        // thanks to the texture matrix we will be able to calculate accurate texture coords
        // so that our texture will always fit our plane without being distorted
          vTextureCoord = (uTextureMatrix0 * vec4(aTextureCoord, 0.0, 1.0)).xy;
          vVertexPosition = vertexPosition;
      }
        </script>
        <script id="plane-fs" type="x-shader/x-fragment">
      #ifdef GL_ES
      precision mediump float;
      #endif

      // get our varyings
      varying vec3 vVertexPosition;
      varying vec2 vTextureCoord;

      // our texture sampler (this is the lib default name, but it could be changed)
      uniform sampler2D uSampler0;

      void main() {
        // get our texture coords
        vec2 textureCoords = vTextureCoord;

        // apply our texture
        vec4 finalColor = texture2D(uSampler0, textureCoords);

        // fake shadows based on vertex position along Z axis
        finalColor.rgb -= clamp(-vVertexPosition.z, 0.0, 1.0);
        // fake lights based on vertex position along Z axis
        finalColor.rgb += clamp(vVertexPosition.z, 0.0, 1.0);

        // handling premultiplied alpha (useful if we were using a png with transparency)
        finalColor = vec4(finalColor.rgb * finalColor.a, finalColor.a);

        gl_FragColor = finalColor;
      }
      </script>
      <script src="https://www.curtainsjs.com/build/curtains.min.js" type="text/javascript"></script>

      <script src="https://cdnjs.cloudflare.com/ajax/libs/kute.js/2.0.16/kute.min.js" integrity="sha512-t1/0GpKvIQ2DZiBDUb/DPThBLIZZS39+ymjqtSCEbUGbbXGMEhGTEDHTzAGxbS5VHceIKaqjN/JmKxT2G1ZgWw==" crossorigin="anonymous"></script>

      <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.2/plugins/BezierPlugin.min.js" integrity="sha512-plyexAULVlTExvDn2yUZFJV9F8q+53MC/GpU9dEuNGXmrrI3J8Rcffjvxg3OOBALBvF+UILPLIBEoCeF2maqTQ==" crossorigin="anonymous"></script>

       <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/kute.js/1.6.2/kute-svg.min.js" integrity="sha512-7iLHYTjCH5b2BTTBQ0g0njpwMLH2X2D9ceguAhuQFNa7jt8aIkd9yS5ImghyjoLRTGQOYVk0hlCp6M+lqbU9eA==" crossorigin="anonymous"></script> -->
  </body>
</html>


